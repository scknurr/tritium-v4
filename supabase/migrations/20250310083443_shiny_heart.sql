/*
  # Add customer roles management

  1. New Tables
    - `customer_roles`
      - `id` (integer, primary key)
      - `name` (text, unique)
      - `description` (text, nullable)
      - `created_at` (timestamp)

  2. Security
    - Enable RLS on `customer_roles` table
    - Add policies for authenticated users to read customer roles
*/

-- Create customer roles table if it doesn't exist
DO $$ BEGIN
  CREATE TABLE IF NOT EXISTS customer_roles (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name text UNIQUE NOT NULL,
    description text,
    created_at timestamptz DEFAULT now()
  );
EXCEPTION
  WHEN duplicate_table THEN
    NULL;
END $$;

-- Enable RLS if not already enabled
DO $$ BEGIN
  ALTER TABLE customer_roles ENABLE ROW LEVEL SECURITY;
EXCEPTION
  WHEN duplicate_object THEN
    NULL;
END $$;

-- Drop existing policies if they exist and create new ones
DO $$ BEGIN
  DROP POLICY IF EXISTS "Allow authenticated users to read customer_roles" ON customer_roles;
  
  CREATE POLICY "Allow authenticated users to read customer_roles"
    ON customer_roles
    FOR SELECT
    TO authenticated
    USING (true);
END $$;

-- Insert default roles if they don't exist
INSERT INTO customer_roles (name, description)
VALUES 
  ('Project Manager', 'Manages project delivery and client relationships'),
  ('Technical Lead', 'Leads technical implementation and architecture'),
  ('Developer', 'Implements technical solutions'),
  ('Business Analyst', 'Analyzes business requirements'),
  ('QA Engineer', 'Ensures quality and testing')
ON CONFLICT (name) DO NOTHING;